{"version":3,"sources":["n1-main/App.module.css","assets/ing/logo.png","n1-main/m1-components/common/Button/Button.module.css","n1-main/m1-components/common/Input/Input.module.css","n1-main/m1-components/auth/SignUp/SignUp.module.css","n1-main/m1-components/Profile/Profile.module.css","n1-main/m1-components/auth/RecoverPass/RecoverPass.module.css","n1-main/m1-components/auth/ChangePass/ChangePass.module.css","n1-main/m3-dal/instance.ts","n1-main/m3-dal/auth-api.ts","n1-main/m2-redux/registerReducer.ts","n1-main/m3-dal/profile-api.ts","n1-main/m2-redux/profileReducer.ts","n1-main/m2-redux/signInReducer.ts","n1-main/m2-redux/recoverPassReducer.ts","n1-main/m2-redux/changePassReducer.ts","n1-main/m3-dal/packs-api.ts","n1-main/m2-redux/packsReducer.ts","n1-main/m2-redux/store.ts","n1-main/m1-components/common/Button/Button.tsx","n1-main/m1-components/common/Input/Input.tsx","n1-main/m1-components/auth/Login/Login.tsx","n1-main/m1-components/auth/SignUp/SignUp.tsx","n1-main/m1-components/Profile/Profile.tsx","n1-main/m1-components/auth/RecoverPass/RecoverPass.tsx","n1-main/m1-components/auth/ChangePass/ChangePass.tsx","n1-main/m1-components/Page404/Page404.tsx","n1-main/m1-components/cards/Packs.tsx","n1-main/m1-components/Routes/Routes.tsx","n1-main/m1-components/Header/Navbar/Navbar.tsx","n1-main/m1-components/Header/Header.tsx","n1-main/App.tsx","serviceWorker.ts","index.tsx","n1-main/m1-components/auth/Login/Login.module.css","n1-main/m1-components/Header/Navbar/Navbar.module.css","n1-main/m1-components/Header/Header.module.css","n1-main/m1-components/Page404/Page404.module.css"],"names":["module","exports","instance","axios","create","baseURL","withCredentials","authApi","register","email","password","a","post","response","data","login","rememberMe","logout","delete","initialState","isSendData","isAddedUser","errorMessage","submitResidterData","payload","type","addedUser","setErrorMessage","profileApi","me","SET_ERROR","SET_USER_DATA","error","isInitialized","userData","_id","name","publicCardPacksCount","created","updated","isAdmin","verified","setAppError","setUserData","isLoggedIn","setIsLoggedIn","value","setError","packsApi","getPacks","get","SET_PACKS","packsInitialState","packs","rootReducers","combineReducers","signUp","state","action","signIn","recoverPass","changePass","profile","store","createStore","applyMiddleware","thunkMiddleware","window","Button","React","memo","props","restProps","className","styles","button","Input","onEnter","onClickEnter","useCallback","event","key","input","onKeyPress","Login","useSelector","dispatch","useDispatch","useState","setEmail","setPassword","setRememberMe","setEmailCallback","e","currentTarget","setPasswordCallback","setRememberMeCallback","checked","onSubmit","preventDefault","logIn","to","PROFILE_PATH","loginWrapper","title","LoginForm","loginForm","placeholder","onChange","recoverPassword","RECOVER_PASS_PATH","activeClassName","active","onClick","SIGN_UP_PATH","SignUp","sendDataRedister","addedUserData","repeatPassword","setRepeatPassword","setRepeatPasswordCallback","registerUser","validatePass","length","validateRepeatPass","disableSubmitButton","errorSpan","pageWrapper","style","color","disabled","Profile","useEffect","console","log","SIGN_IN_PATH","RecoverPass","ChangePass","Page404","container","errorNumber","text","Packs","cardPacks","err","columns","dataIndex","url","render","size","dataSource","Routes","exact","path","Navbar","menuList","Header","logoutCallBack","headerWrapper","headerContainer","titleWrapper","logo","src","alt","App","app","Boolean","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.6e6f43dc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__2Qw7z\"};","module.exports = __webpack_public_path__ + \"static/media/logo.a4aedb73.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__2jq7e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Input_input__1XhFv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageWrapper\":\"SignUp_pageWrapper__mcilh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageWrapper\":\"Profile_pageWrapper__eLigE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageWrapper\":\"RecoverPass_pageWrapper__15rRd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageWrapper\":\"ChangePass_pageWrapper__VhFQP\"};","import axios from \"axios\";\r\n\r\nexport const instance = axios.create({\r\n    // baseURL: 'http://localhost:7542/2.0/',\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0/',\r\n    withCredentials: true\r\n})\r\n","import {instance} from './instance'\r\nimport {ResponseDataType} from \"./profile-api\";\r\n\r\n\r\nexport type ResponseDataAddedUserType = {\r\n    created: string\r\n    email: string\r\n    isAdmin: boolean\r\n    name: string\r\n    publicCardPacksCount: number\r\n    rememberMe: boolean\r\n    updated: string\r\n    verified: boolean\r\n    __v: number\r\n    _id: string\r\n}\r\n\r\nexport type LogoutResponseDataType = {\r\n    info: string\r\n    error: string\r\n}\r\n\r\n\r\nexport const authApi = {\r\n    register:  async (email: string, password: string) => {\r\n      const response = await instance.post<ResponseDataAddedUserType>(`auth/register`, {email, password})\r\n        return response.data\r\n    },\r\n    login: async (email: string, password: string, rememberMe: boolean) => {\r\n        const response = await instance.post<ResponseDataType>('auth/login', {email, password, rememberMe})\r\n        return response.data\r\n    },\r\n    logout: async () => {\r\n        const response = await instance.delete<LogoutResponseDataType>('auth/me')\r\n        return response.data\r\n    }\r\n}\r\n","import {Dispatch} from 'redux';\r\nimport {authApi} from '../m3-dal/auth-api';\r\n\r\ntype InitialStateType = {\r\n    isSendData: boolean,\r\n    isAddedUser: boolean | null,\r\n    errorMessage: string | null\r\n}\r\n\r\nconst initialState: InitialStateType = {\r\n    isSendData: false,\r\n    isAddedUser: null,\r\n    errorMessage: null\r\n}\r\n\r\nexport const registerReducer = (state: InitialStateType = initialState, action: ActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'SEND_DATA':\r\n            return {...state, isSendData: action.payload};\r\n        case 'ADDED_USER':\r\n            return {...state, isAddedUser: action.payload};\r\n        case 'SET_ERROR_MESSAGE':\r\n            return {...state, errorMessage: action.payload}\r\n\r\n        default :\r\n            return state;\r\n    }\r\n}\r\n\r\n// action types\r\nconst SEND_DATA = 'SEND_DATA'\r\nconst ADDED_USER = 'ADDED_USER'\r\nconst SET_ERROR_MESSAGE = 'SET_ERROR_MESSAGE'\r\n\r\ntype ActionType =\r\n    | ReturnType<typeof submitResidterData>\r\n    | ReturnType<typeof addedUser>\r\n    | ReturnType<typeof setErrorMessage>\r\n\r\n\r\n// action creators\r\n\r\nconst submitResidterData = (payload: boolean) => ({type: SEND_DATA, payload} as const)\r\n\r\nexport const addedUser = (payload: boolean) => ({type: ADDED_USER, payload} as const)\r\n\r\nexport const setErrorMessage = (payload: string) => ({type: SET_ERROR_MESSAGE, payload} as const)\r\n\r\n// Thunk\r\n\r\nexport const registerUser = (email: string, password: string) => async (dispatch: Dispatch) => {\r\n    dispatch(submitResidterData(true))\r\n    try {\r\n        await authApi.register(email, password)\r\n        dispatch(addedUser(true))\r\n        dispatch(submitResidterData(false))\r\n    } catch (error) {\r\n        dispatch(submitResidterData(false))\r\n        dispatch(addedUser(false))\r\n        dispatch(setErrorMessage('Register failed. Try again...'))\r\n    }\r\n}\r\n\r\n","import {instance} from \"./instance\";\r\n\r\nexport type ResponseDataType = UserDataType & { error: string }\r\n\r\nexport type UserDataType = {\r\n    _id: string\r\n    email: string\r\n    name: string\r\n    avatar?: string\r\n    publicCardPacksCount: number\r\n    created: string\r\n    updated: string\r\n    isAdmin: boolean\r\n    verified: boolean\r\n    rememberMe: boolean\r\n    error: string\r\n}\r\n\r\nexport const profileApi = {\r\n    me: async () => {\r\n        const response = await instance.post<ResponseDataType>(`auth/me`)\r\n        return response.data\r\n    },\r\n}\r\n\r\n","import {Dispatch} from \"redux\";\r\nimport {profileApi, UserDataType} from \"../m3-dal/profile-api\";\r\nimport {setIsLoggedIn, SignInActionsType} from \"./signInReducer\";\r\n\r\nconst SET_ERROR = 'cards/profile/SET-ERROR'\r\nconst SET_IS_INITIALIZED = 'cards/profile/SET-IS-INITIALIZED'\r\nconst SET_USER_DATA = 'cards/profile/SET-USER-DATA'\r\n\r\n\r\nexport type RequestErrorType = null | string\r\n\r\nexport type InitialAppReducerStateType = {\r\n    error: RequestErrorType\r\n    isInitialized: boolean\r\n    userData: UserDataType\r\n}\r\n\r\n\r\nconst initialState = {\r\n    error: null,\r\n    isInitialized: false,\r\n    userData: {\r\n        _id: '',\r\n        email: '',\r\n        name: '',\r\n        publicCardPacksCount: 1,\r\n        created: 'null',\r\n        updated: '',\r\n        isAdmin: true,\r\n        verified: true,\r\n        rememberMe: true,\r\n        error: ''\r\n    }\r\n}\r\n\r\nexport const profileReducer = (state: InitialAppReducerStateType = initialState, action: ProfileActionsType): InitialAppReducerStateType => {\r\n    switch (action.type) {\r\n        case SET_ERROR: {\r\n            return {...state, error: action.error}\r\n        }\r\n        case SET_IS_INITIALIZED: {\r\n            return {...state, isInitialized: action.isInitialized}\r\n        }\r\n        case SET_USER_DATA:\r\n            return {...state, userData: action.userData}\r\n        default:\r\n            return state\r\n\r\n    }\r\n}\r\n\r\n// action types\r\n\r\nexport type ProfileActionsType = ReturnType<typeof setAppError> | ReturnType<typeof setInitializeApp> | ReturnType<typeof setUserData>\r\n\r\n\r\nexport const setAppError = (error: RequestErrorType) => {\r\n    return {type: SET_ERROR, error} as const\r\n}\r\n\r\nexport const setInitializeApp = (isInitialized: boolean) => {\r\n    return {type: SET_IS_INITIALIZED, isInitialized} as const\r\n}\r\n\r\nexport const setUserData = (userData: UserDataType) => {\r\n    return {type: SET_USER_DATA, userData} as const\r\n}\r\n\r\n\r\n// Thunk\r\n\r\n\r\nexport const initializeApp = () => async (dispatch: ThunkDispatch) => {\r\n    try {\r\n        const response = await profileApi.me()\r\n        dispatch(setUserData(response))\r\n        dispatch(setIsLoggedIn(true))\r\n    } catch (err) {\r\n        const error = err.response\r\n            ? err.response.data.error\r\n            : (err + 'Some kind of error has occurred');\r\n        dispatch(setAppError(error))    }\r\ndispatch(setInitializeApp(true))\r\n}\r\n\r\ntype ThunkDispatch = Dispatch<ProfileActionsType | SignInActionsType>\r\n\r\n\r\n","import {authApi} from \"../m3-dal/auth-api\"\r\nimport {Dispatch} from \"redux\"\r\nimport {ProfileActionsType, setUserData} from \"./profileReducer\";\r\n\r\nconst SET_IS_LOGGED_IN = 'cards/signIn/SET-IS-LOGGED-IN'\r\nconst SET_ERROR = 'cards/signIn/SET-ERROR'\r\n\r\nexport type RequestErrorType = null | string\r\n\r\n\r\ntype InitialStateType = {\r\n    isLoggedIn: boolean,\r\n    error: RequestErrorType,\r\n\r\n}\r\n\r\nconst initialState: InitialStateType = {\r\n    isLoggedIn: false,\r\n    error: null,\r\n}\r\n\r\nexport const signInReducer = (state: InitialStateType = initialState, action: SignInActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case SET_IS_LOGGED_IN:\r\n            return {...state, isLoggedIn: action.value};\r\n        case SET_ERROR:\r\n            return {...state, error: action.error};\r\n\r\n        default :\r\n            return state;\r\n    }\r\n}\r\n\r\n// action types\r\nexport type SignInActionsType = ReturnType<typeof setIsLoggedIn>\r\n    | ReturnType<typeof setError>\r\n\r\n// action creators\r\nexport const setIsLoggedIn = (value: boolean) => ({type: SET_IS_LOGGED_IN, value} as const);\r\nexport const setError = (error: RequestErrorType) => ({type: SET_ERROR, error} as const);\r\n\r\n\r\n// Thunk\r\nexport const logIn = (email: string, password: string, rememberMe: boolean) => async (dispatch: ThunkType) => {\r\n    const response = await authApi.login(email, password, rememberMe)\r\n    try {\r\n        dispatch(setIsLoggedIn(true))\r\n        dispatch(setUserData(response))\r\n    } catch (error) {\r\n        dispatch(setError(error.response ? error.response.data.error : 'Some error occurred'));\r\n        dispatch(setIsLoggedIn(false))\r\n    }\r\n}\r\n\r\nexport const logout = () => async (dispatch: ThunkType) => {\r\n    try {\r\n        const response = await authApi.logout()\r\n        console.log(response)\r\n        dispatch(setIsLoggedIn(false))\r\n    }\r\ncatch (err) {\r\n    dispatch(setError(err.response.data.error));\r\n    }\r\n}\r\n\r\n\r\n\r\ntype ThunkType = Dispatch<SignInActionsType | ProfileActionsType>\r\n","type InitialStateType = typeof initialState\r\n\r\nconst initialState = {\r\n}\r\n\r\nexport const recoverPassReducer = (state: InitialStateType = initialState, action: any): InitialStateType => {\r\n    switch (action.type) {\r\n\r\n        default :\r\n            return state;\r\n    }\r\n}\r\n\r\n// action types\r\n\r\n\r\n// action creators\r\n\r\n\r\n// Thunk\r\n\r\n\r\n\r\n","type InitialStateType = typeof initialState\r\n\r\nconst initialState = {\r\n}\r\n\r\nexport const changePassReducer = (state: InitialStateType = initialState, action: any): InitialStateType => {\r\n    switch (action.type) {\r\n\r\n        default :\r\n            return state;\r\n    }\r\n}\r\n\r\n// action types\r\n\r\n\r\n// action creators\r\n\r\n\r\n// Thunk\r\n\r\n\r\n\r\n","import {instance} from \"./instance\";\r\nimport { PackType } from \"../m2-redux/packsReducer\";\r\n\r\nexport type GetPacksDataType = {\r\n    cardPacks: Array<PackType>;\r\n\r\n    error: string;\r\n}\r\n\r\n\r\nexport const packsApi = {\r\n    getPacks: async () => {\r\n        const response = await instance.get<GetPacksDataType>(\r\n            `/cards/pack?`\r\n            +`pageCount=1000`)\r\n        return response.data\r\n    },\r\n}\r\n\r\n","import {Dispatch} from \"redux\";\r\nimport {packsApi} from \"../m3-dal/packs-api\";\r\n\r\nconst SET_PACKS = 'cards/packs/SET-PACKS'\r\n\r\nexport type PackType = {\r\n    _id: string;\r\n    user_id: string;\r\n    user_name: string;\r\n    private: boolean;\r\n\r\n    name: string;\r\n    path: string;\r\n    grade: number;\r\n    shots: number;\r\n\r\n    cardsCount: number;\r\n    deckCover: string;\r\n\r\n    type: string;\r\n    rating: number;\r\n    more_id: string;\r\n\r\n    created: string;\r\n    updated: string;\r\n}\r\n\r\nexport type PacksStateType = {\r\n    packs: Array<PackType>;\r\n}\r\n\r\nconst packsInitialState: PacksStateType = {\r\n    packs: [],\r\n};\r\n\r\nexport const packsReducer = (state = packsInitialState, action: PacksActionsType): PacksStateType => {\r\n    switch (action.type) {\r\n        case SET_PACKS:\r\n            return {\r\n                ...state,\r\n                packs: action.packs,\r\n            }\r\n        default:\r\n            return state\r\n\r\n    }\r\n}\r\n\r\n// action types\r\n\r\ntype PacksActionsType = ReturnType<typeof setPacks>\r\n\r\nexport const setPacks = (packs: Array<PackType>) => {\r\n    return {type: SET_PACKS, packs} as const\r\n}\r\n\r\n\r\nexport const getPacks = () => async (dispatch: Dispatch) => {\r\n    const response = await packsApi.getPacks()\r\n    try {\r\n        dispatch(setPacks(response.cardPacks))\r\n    } catch (err) {\r\n        console.log(err)\r\n    }\r\n}\r\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport thunkMiddleware from \"redux-thunk\"\r\nimport {registerReducer} from \"./registerReducer\";\r\nimport {signInReducer} from \"./signInReducer\";\r\nimport {recoverPassReducer} from \"./recoverPassReducer\";\r\nimport {changePassReducer} from \"./changePassReducer\";\r\nimport {profileReducer} from \"./profileReducer\";\r\nimport {packsReducer} from \"./packsReducer\";\r\n\r\nconst rootReducers = combineReducers({\r\n    signUp: registerReducer,\r\n    signIn: signInReducer,\r\n    recoverPass: recoverPassReducer,\r\n    changePass: changePassReducer,\r\n    profile: profileReducer,\r\n    packs: packsReducer\r\n});\r\n\r\n\r\nexport type AppRootStateType = ReturnType<typeof rootReducers>\r\n\r\nexport const store = createStore(rootReducers, applyMiddleware(thunkMiddleware));\r\n\r\n\r\n// @ts-ignore\r\nwindow.store = store;\r\n\r\n\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react';\r\nimport styles from './Button.module.css';\r\n\r\ntype   ButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\nconst Button = React.memo((props: ButtonPropsType) => {\r\n    const {...restProps} = props;\r\n    return (\r\n        <button className={styles.button} {...restProps}>{props.name}</button>\r\n    );\r\n})\r\n\r\nexport default Button;\r\n\r\n","import React, {DetailedHTMLProps, InputHTMLAttributes, useCallback} from 'react';\r\nimport styles from './Input.module.css';\r\n\r\nexport type InputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n    & { onEnter?: () => void, error?: string };\r\n\r\nconst Input = React.memo((props: InputPropsType) => {\r\n    const {onEnter, error, ...restProps} = props;\r\n\r\n    const onClickEnter = useCallback((event: React.KeyboardEvent<HTMLInputElement>) => {\r\n        if (onEnter && event.key === \"Enter\") {\r\n            onEnter()\r\n        }\r\n    }, [onEnter])\r\n\r\n    return (\r\n        <>\r\n            <input className={styles.input} {...restProps}  onKeyPress={onClickEnter}/>\r\n            {error ? <span>{error}</span> : ''}\r\n        </>\r\n    );\r\n})\r\n\r\nexport default Input;\r\n","import React, {ChangeEvent, useCallback, useState, MouseEvent} from 'react';\r\nimport styles from './Login.module.css'\r\nimport Button from \"../../common/Button/Button\";\r\nimport Input from \"../../common/Input/Input\";\r\nimport {NavLink, Redirect} from \"react-router-dom\";\r\nimport {RECOVER_PASS_PATH, PROFILE_PATH, SIGN_UP_PATH} from \"../../Routes/Routes\";\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppRootStateType} from \"../../../m2-redux/store\";\r\nimport {logIn} from \"../../../m2-redux/signInReducer\";\r\n\r\n\r\nconst Login = React.memo(() => {\r\n\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.signIn.isLoggedIn);\r\n    const dispatch = useDispatch()\r\n\r\n    const [email, setEmail] = useState<string>('');\r\n    const [password, setPassword] = useState<string>('');\r\n    const [rememberMe, setRememberMe] = useState<boolean>(false);\r\n\r\n    const setEmailCallback = useCallback((e: ChangeEvent<HTMLInputElement>) => setEmail(e.currentTarget.value),\r\n        [setEmail]);\r\n\r\n    const setPasswordCallback = useCallback((e: ChangeEvent<HTMLInputElement>) => setPassword(e.currentTarget.value),\r\n        [setPassword]);\r\n\r\n    const setRememberMeCallback = useCallback((e: ChangeEvent<HTMLInputElement>) => setRememberMe(e.currentTarget.checked),\r\n        [setRememberMe]);\r\n\r\n\r\n    const onSubmit = useCallback((e: MouseEvent<HTMLButtonElement>) => {\r\n        e.preventDefault()\r\n        dispatch(logIn(email, password, rememberMe))\r\n    }, [email, password, rememberMe, dispatch]);\r\n\r\n    if (isLoggedIn) {\r\n        return <Redirect to={PROFILE_PATH}/>\r\n    }\r\n\r\n    return (\r\n        <div className={styles.loginWrapper}>\r\n            <div className={styles.title}>\r\n                <h2>Login</h2>\r\n            </div>\r\n            <LoginForm email={email}\r\n                       setEmail={setEmailCallback}\r\n                       password={password}\r\n                       setPassword={setPasswordCallback}\r\n                       rememberMe={rememberMe}\r\n                       setRememberMe={setRememberMeCallback}\r\n                       onSubmit={onSubmit}/>\r\n        </div>\r\n    )\r\n});\r\n\r\ntype PropsType = {\r\n    email: string\r\n    setEmail: (email: ChangeEvent<HTMLInputElement>) => void\r\n    password: string\r\n    setPassword: (password: ChangeEvent<HTMLInputElement>) => void\r\n    rememberMe: boolean\r\n    setRememberMe: (rememberMe: ChangeEvent<HTMLInputElement>) => void\r\n    onSubmit: (e: MouseEvent<HTMLButtonElement>) => void\r\n}\r\n\r\nconst LoginForm = React.memo((props: PropsType) => {\r\n\r\n    return (\r\n        <>\r\n            <form className={styles.loginForm}>\r\n                <div>\r\n                    <Input placeholder='Email'\r\n                           type='email'\r\n                           value={props.email}\r\n                           onChange={props.setEmail}/>\r\n                </div>\r\n                <div>\r\n                    <Input placeholder='Password'\r\n                           type='password'\r\n                           value={props.password}\r\n                           onChange={props.setPassword}/>\r\n                </div>\r\n                <div className={styles.recoverPassword}>\r\n                    <NavLink to={RECOVER_PASS_PATH} activeClassName={styles.active}>Forgot password?</NavLink>\r\n                </div>\r\n\r\n                <div className={styles.rememberMe}>\r\n                    <Input\r\n                        type='checkbox'\r\n                        name='rememberMe'\r\n                        checked={props.rememberMe}\r\n                        onChange={props.setRememberMe}\r\n                    />\r\n                    <label> remember me</label>\r\n                </div>\r\n                <Button name='Sign in' onClick={props.onSubmit}/>\r\n            </form>\r\n            <div className={styles.signUp}>\r\n                <span>Not registered! <NavLink to={SIGN_UP_PATH }\r\n                                               activeClassName={styles.active}>Sign up</NavLink> now.</span>\r\n            </div>\r\n        </>\r\n    );\r\n})\r\n\r\n\r\nexport default Login;\r\n","import React, {ChangeEvent, useCallback, useState} from 'react';\r\nimport styles from './SignUp.module.css'\r\nimport Input from '../../common/Input/Input';\r\nimport Button from '../../common/Button/Button';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppRootStateType} from '../../../m2-redux/store';\r\nimport {registerUser, setErrorMessage} from '../../../m2-redux/registerReducer';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nconst SignUp = () => {\r\n\r\n    const sendDataRedister = useSelector((state: AppRootStateType) => state.signUp.isSendData)\r\n    const addedUserData = useSelector((state: AppRootStateType) => state.signUp.isAddedUser)\r\n    const errorMessage = useSelector((state: AppRootStateType) => state.signUp.errorMessage)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [email, setEmail] = useState<string>('');\r\n    const [password, setPassword] = useState<string>('');\r\n    const [repeatPassword, setRepeatPassword] = useState<string>('');\r\n\r\n\r\n    const setEmailCallback = useCallback((e: ChangeEvent<HTMLInputElement>) => setEmail(e.currentTarget.value),\r\n        [email]);\r\n\r\n    const setPasswordCallback = useCallback((e: ChangeEvent<HTMLInputElement>) => {\r\n            setPassword(e.currentTarget.value)\r\n            setErrorMessage('')\r\n        }, [password]\r\n    );\r\n\r\n    const setRepeatPasswordCallback = useCallback((e: ChangeEvent<HTMLInputElement>) => {\r\n            setRepeatPassword(e.currentTarget.value)\r\n            setErrorMessage('')\r\n        }\r\n        , [repeatPassword]);\r\n\r\n    const onSubmit = useCallback(() => {\r\n        dispatch(registerUser(email, password))\r\n    }, [dispatch, email, password])\r\n\r\n    const validatePass = password.length < 7 ?\r\n        'Password must be more than 7 characters'\r\n        : 'Password:'\r\n    const validateRepeatPass = password !== repeatPassword ?\r\n        'incorrect password'\r\n        : ''\r\n\r\n    const disableSubmitButton = password !== repeatPassword || password.length < 7 && repeatPassword.length < 7\r\n\r\n    const errorSpan = errorMessage ? errorMessage : ''\r\n\r\n    if (sendDataRedister) {\r\n        return <div>'Wait for the end of the operation...'</div>\r\n    }\r\n    if (addedUserData) {\r\n        return <Redirect to={'/login'}/>\r\n    }\r\n\r\n    return (\r\n        <div className={styles.pageWrapper}>\r\n            <span style={{color: 'red'}}>{errorSpan}</span>\r\n            <div>\r\n                <label>Email:</label>\r\n                <Input type={'email'} value={email} onChange={setEmailCallback}/>\r\n            </div>\r\n            <div>\r\n                <label>{validatePass}</label>\r\n                <Input type={'password'} value={password} onChange={setPasswordCallback}/>\r\n            </div>\r\n            <div>\r\n                <label>Repeat password:</label>\r\n                <span>{validateRepeatPass}</span>\r\n                <Input type={'password'} value={repeatPassword} onChange={setRepeatPasswordCallback}/>\r\n            </div>\r\n\r\n            <div>\r\n                <Button disabled={disableSubmitButton} name={'Register'} onClick={onSubmit}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignUp\r\n","import React, {useEffect} from \"react\";\r\nimport styles from './Profile.module.css'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../m2-redux/store\";\r\nimport {InitialAppReducerStateType, initializeApp} from \"../../m2-redux/profileReducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {SIGN_IN_PATH} from \"../Routes/Routes\";\r\n\r\n\r\nconst Profile = React.memo(() => {\r\n\r\n    const {userData, isInitialized} = useSelector<AppRootStateType, InitialAppReducerStateType>(state => state.profile)\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.signIn.isLoggedIn);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if (!isInitialized) {\r\n            dispatch(initializeApp())\r\n        }\r\n    }, [isInitialized, dispatch]);\r\n\r\n    if (!isLoggedIn) {\r\n        return <Redirect to={SIGN_IN_PATH}/>\r\n    }\r\n\r\n\r\n    console.log(userData);\r\n\r\n    return (\r\n        <div className={styles.pageWrapper}>\r\n            <h2>Profile</h2>\r\n            <span>email: {userData.email}</span>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default Profile\r\n","import React from \"react\";\r\nimport styles from './RecoverPass.module.css'\r\n\r\nconst RecoverPass = () => {\r\n    return (\r\n        <div className={styles.pageWrapper}>\r\n            Recover password\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RecoverPass\r\n","import React from \"react\";\r\nimport styles from './ChangePass.module.css'\r\n\r\nconst ChangePass = () => {\r\n    return (\r\n        <div className={styles.pageWrapper}>\r\n            Change password\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChangePass\r\n","import style from \"./Page404.module.css\";\r\n\r\nimport React from \"react\";\r\n\r\nexport const Page404 = () => {\r\n    return (\r\n        <div className={style.container}>\r\n            <span className={style.errorNumber}>404</span>\r\n            <span className={style.text}>Page not found</span>\r\n        </div>\r\n    );\r\n}\r\n","import React, {useEffect} from \"react\";\r\nimport {Space, Table} from 'antd';\r\nimport 'antd/dist/antd.css';\r\nimport Button from \"../common/Button/Button\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {SIGN_IN_PATH} from \"../Routes/Routes\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../m2-redux/store\";\r\nimport {getPacks, PackType} from \"../../m2-redux/packsReducer\";\r\n\r\nexport const Packs = React.memo(() => {\r\n\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.signIn.isLoggedIn);\r\n    const packs = useSelector<AppRootStateType, Array<PackType>>(state => state.packs.packs)\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n            dispatch(getPacks())\r\n        }, [dispatch])\r\n\r\n  console.log(packs)\r\n\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Pack name ',\r\n            dataIndex: 'name',\r\n            key: 'name',\r\n        },\r\n        {\r\n            title: 'Cards count',\r\n            dataIndex: 'cardsCount',\r\n            key: 'cardsCount',\r\n        },\r\n        {\r\n            title: 'Update date',\r\n            dataIndex: 'updated',\r\n            key: 'updated',\r\n        },\r\n        {\r\n            title: 'Url',\r\n            dataIndex: 'url',\r\n            key: 'url',\r\n        },\r\n        {\r\n            title: <Button name={'Add pack'}/>,\r\n            dataIndex: 'addDeletePack',\r\n            key: 'addDeletePack',\r\n            url: '',\r\n            render: () => (\r\n                <Space size=\"middle\">\r\n                    <Button name={'Delete pack'}/>\r\n                </Space>\r\n            ),\r\n        },\r\n    ];\r\n\r\n    if (!isLoggedIn) {\r\n        return <Redirect to={SIGN_IN_PATH}/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Table dataSource={packs} columns={columns} />\r\n        </div>\r\n    )\r\n})\r\n","import React from 'react';\r\nimport {Redirect, Route, Switch} from \"react-router-dom\";\r\nimport Login from \"../auth/Login/Login\";\r\nimport SignUp from \"../auth/SignUp/SignUp\";\r\nimport Profile from \"../Profile/Profile\";\r\nimport RecoverPass from '../auth/RecoverPass/RecoverPass';\r\nimport ChangePass from \"../auth/ChangePass/ChangePass\";\r\nimport {Page404} from \"../Page404/Page404\";\r\nimport { Packs } from '../cards/Packs';\r\n\r\n\r\n// all project paths\r\nexport const SIGN_IN_PATH = '/login';\r\nexport const SIGN_UP_PATH = '/signUp';\r\nexport const RECOVER_PASS_PATH = '/recoverPassword';\r\nexport const PROFILE_PATH = '/profile';\r\nexport const CHANGE_PASS_PATH = '/changePassword';\r\nexport const PACKS_CARDS_PATH = '/packs';\r\n\r\n\r\nconst Routes: React.FC = () => {\r\n    return (\r\n        <Switch>\r\n            <Route exact path={'/'} render={() => <Redirect to={PROFILE_PATH}/>}/>\r\n\r\n            <Route path={SIGN_IN_PATH} render={() => <Login/>}/>\r\n            <Route path={SIGN_UP_PATH} render={() => <SignUp/>}/>\r\n            <Route path={RECOVER_PASS_PATH} render={() => <RecoverPass/>}/>\r\n            <Route path={PROFILE_PATH} render={() => <Profile/>}/>\r\n            <Route path={CHANGE_PASS_PATH} render={() => <ChangePass/>}/>\r\n            <Route path={PACKS_CARDS_PATH} render={() => <Packs/>}/>\r\n\r\n            <Route path={'*'} render={() => <Page404/>}/>\r\n        </Switch>\r\n    );\r\n};\r\n\r\nexport default Routes;\r\n","import React from 'react';\r\nimport styles from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {CHANGE_PASS_PATH, PROFILE_PATH, RECOVER_PASS_PATH, SIGN_UP_PATH, PACKS_CARDS_PATH} from \"../../Routes/Routes\";\r\n\r\nexport const Navbar = () => {\r\n\r\n    return (\r\n        <div>\r\n            <div className={styles.menuList}>\r\n                <NavLink to={PROFILE_PATH} activeClassName={styles.active}>profile</NavLink>\r\n                <NavLink to={SIGN_UP_PATH} activeClassName={styles.active}>sign up</NavLink>\r\n                <NavLink to={RECOVER_PASS_PATH} activeClassName={styles.active}>recover password</NavLink>\r\n                <NavLink to={CHANGE_PASS_PATH} activeClassName={styles.active}>change password</NavLink>\r\n                <NavLink to={PACKS_CARDS_PATH} activeClassName={styles.active}>packs</NavLink>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n","import React, {useCallback} from \"react\";\r\nimport styles from './Header.module.css'\r\nimport logo from '../../../assets/ing/logo.png'\r\nimport Button from \"../common/Button/Button\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {SIGN_IN_PATH} from \"../Routes/Routes\";\r\nimport {Navbar} from \"./Navbar/Navbar\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../m2-redux/store\";\r\nimport { logout } from \"../../m2-redux/signInReducer\";\r\n\r\nconst Header = React.memo(() => {\r\n        const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.signIn.isLoggedIn);\r\n\r\n        const dispatch = useDispatch();\r\n\r\n        const logoutCallBack = useCallback(() => {\r\n            dispatch(logout())\r\n        }, [dispatch]);\r\n\r\n        return (\r\n            <div className={styles.headerWrapper}>\r\n                <div className={styles.headerContainer}>\r\n                    <div className={styles.titleWrapper}>\r\n                        <img className={styles.logo} src={logo} alt='logo'/>\r\n                        <h1>Cards</h1>\r\n                    </div>\r\n                    <Navbar/>\r\n\r\n                    {!isLoggedIn\r\n                        ? <NavLink to={SIGN_IN_PATH}><Button name='Login'/></NavLink>\r\n                        : <Button name='LogOut' onClick={logoutCallBack}/>}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n)\r\n\r\nexport default Header\r\n","import React from 'react';\r\nimport styles from './App.module.css';\r\nimport {HashRouter} from \"react-router-dom\";\r\nimport {Provider} from 'react-redux';\r\nimport {store} from './m2-redux/store';\r\nimport Header from \"./m1-components/Header/Header\";\r\nimport Routes from \"./m1-components/Routes/Routes\";\r\n\r\n\r\nconst App = () => {\r\n\r\n    return (\r\n        <HashRouter>\r\n            <Provider store={store}>\r\n                <div className={styles.app}>\r\n                    <Header/>\r\n                    <Routes/>\r\n                </div>\r\n            </Provider>\r\n        </HashRouter>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './n1-main/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginWrapper\":\"Login_loginWrapper__nEpwv\",\"title\":\"Login_title__2yjit\",\"loginForm\":\"Login_loginForm__3PkQ9\",\"recoverPassword\":\"Login_recoverPassword__15-o7\",\"rememberMe\":\"Login_rememberMe__3t--e\",\"signUp\":\"Login_signUp__2-zFX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menuList\":\"Navbar_menuList__YxiQ8\",\"active\":\"Navbar_active__cuqUY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerWrapper\":\"Header_headerWrapper__3AKcg\",\"headerContainer\":\"Header_headerContainer__38aWY\",\"titleWrapper\":\"Header_titleWrapper__zgUzc\",\"logo\":\"Header_logo__nLmbb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Page404_container__3uWJ8\",\"errorNumber\":\"Page404_errorNumber__1IiGw\",\"text\":\"Page404_text__1RMEQ\"};"],"sourceRoot":""}